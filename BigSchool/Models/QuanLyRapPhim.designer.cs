#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BigSchool.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bigschool")]
	public partial class QuanLyRapPhimDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertXuat_Chieu(Xuat_Chieu instance);
    partial void UpdateXuat_Chieu(Xuat_Chieu instance);
    partial void DeleteXuat_Chieu(Xuat_Chieu instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertGhe(Ghe instance);
    partial void UpdateGhe(Ghe instance);
    partial void DeleteGhe(Ghe instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhach_Hang(Khach_Hang instance);
    partial void UpdateKhach_Hang(Khach_Hang instance);
    partial void DeleteKhach_Hang(Khach_Hang instance);
    partial void InsertLich_Chieu(Lich_Chieu instance);
    partial void UpdateLich_Chieu(Lich_Chieu instance);
    partial void DeleteLich_Chieu(Lich_Chieu instance);
    partial void InsertLoai_Ghe(Loai_Ghe instance);
    partial void UpdateLoai_Ghe(Loai_Ghe instance);
    partial void DeleteLoai_Ghe(Loai_Ghe instance);
    partial void InsertLoai_Phim(Loai_Phim instance);
    partial void UpdateLoai_Phim(Loai_Phim instance);
    partial void DeleteLoai_Phim(Loai_Phim instance);
    partial void InsertPhim(Phim instance);
    partial void UpdatePhim(Phim instance);
    partial void DeletePhim(Phim instance);
    partial void InsertPhong_Chieu(Phong_Chieu instance);
    partial void UpdatePhong_Chieu(Phong_Chieu instance);
    partial void DeletePhong_Chieu(Phong_Chieu instance);
    partial void InsertRap_phim(Rap_phim instance);
    partial void UpdateRap_phim(Rap_phim instance);
    partial void DeleteRap_phim(Rap_phim instance);
    partial void InsertThe_Loai(The_Loai instance);
    partial void UpdateThe_Loai(The_Loai instance);
    partial void DeleteThe_Loai(The_Loai instance);
    partial void InsertVE(VE instance);
    partial void UpdateVE(VE instance);
    partial void DeleteVE(VE instance);
    #endregion
		
		public QuanLyRapPhimDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Bigschool"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyRapPhimDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyRapPhimDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyRapPhimDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyRapPhimDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<Xuat_Chieu> Xuat_Chieus
		{
			get
			{
				return this.GetTable<Xuat_Chieu>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<Ghe> Ghes
		{
			get
			{
				return this.GetTable<Ghe>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<Khach_Hang> Khach_Hangs
		{
			get
			{
				return this.GetTable<Khach_Hang>();
			}
		}
		
		public System.Data.Linq.Table<Lich_Chieu> Lich_Chieus
		{
			get
			{
				return this.GetTable<Lich_Chieu>();
			}
		}
		
		public System.Data.Linq.Table<Loai_Ghe> Loai_Ghes
		{
			get
			{
				return this.GetTable<Loai_Ghe>();
			}
		}
		
		public System.Data.Linq.Table<Loai_Phim> Loai_Phims
		{
			get
			{
				return this.GetTable<Loai_Phim>();
			}
		}
		
		public System.Data.Linq.Table<Phim> Phims
		{
			get
			{
				return this.GetTable<Phim>();
			}
		}
		
		public System.Data.Linq.Table<Phong_Chieu> Phong_Chieus
		{
			get
			{
				return this.GetTable<Phong_Chieu>();
			}
		}
		
		public System.Data.Linq.Table<Rap_phim> Rap_phims
		{
			get
			{
				return this.GetTable<Rap_phim>();
			}
		}
		
		public System.Data.Linq.Table<The_Loai> The_Loais
		{
			get
			{
				return this.GetTable<The_Loai>();
			}
		}
		
		public System.Data.Linq.Table<VE> VEs
		{
			get
			{
				return this.GetTable<VE>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.P_Ve")]
		public ISingleResult<P_VeResult> P_Ve([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> malc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string tenphim)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), malc, tenphim);
			return ((ISingleResult<P_VeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.P_LichChieu")]
		public ISingleResult<P_LichChieuResult> P_LichChieu([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> maphim, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> malc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maphim, malc);
			return ((ISingleResult<P_LichChieuResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Xuat Chieu]")]
	public partial class Xuat_Chieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaXC;
		
		private string _Giochieu;
		
		private int _GiaXC;
		
		private EntitySet<Lich_Chieu> _Lich_Chieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaXCChanging(int value);
    partial void OnMaXCChanged();
    partial void OnGiochieuChanging(string value);
    partial void OnGiochieuChanged();
    partial void OnGiaXCChanging(int value);
    partial void OnGiaXCChanged();
    #endregion
		
		public Xuat_Chieu()
		{
			this._Lich_Chieus = new EntitySet<Lich_Chieu>(new Action<Lich_Chieu>(this.attach_Lich_Chieus), new Action<Lich_Chieu>(this.detach_Lich_Chieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaXC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaXC
		{
			get
			{
				return this._MaXC;
			}
			set
			{
				if ((this._MaXC != value))
				{
					this.OnMaXCChanging(value);
					this.SendPropertyChanging();
					this._MaXC = value;
					this.SendPropertyChanged("MaXC");
					this.OnMaXCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giochieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Giochieu
		{
			get
			{
				return this._Giochieu;
			}
			set
			{
				if ((this._Giochieu != value))
				{
					this.OnGiochieuChanging(value);
					this.SendPropertyChanging();
					this._Giochieu = value;
					this.SendPropertyChanged("Giochieu");
					this.OnGiochieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaXC", DbType="Int NOT NULL")]
		public int GiaXC
		{
			get
			{
				return this._GiaXC;
			}
			set
			{
				if ((this._GiaXC != value))
				{
					this.OnGiaXCChanging(value);
					this.SendPropertyChanging();
					this._GiaXC = value;
					this.SendPropertyChanged("GiaXC");
					this.OnGiaXCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xuat_Chieu_Lich_Chieu", Storage="_Lich_Chieus", ThisKey="MaXC", OtherKey="MaXC")]
		public EntitySet<Lich_Chieu> Lich_Chieus
		{
			get
			{
				return this._Lich_Chieus;
			}
			set
			{
				this._Lich_Chieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lich_Chieus(Lich_Chieu entity)
		{
			this.SendPropertyChanging();
			entity.Xuat_Chieu = this;
		}
		
		private void detach_Lich_Chieus(Lich_Chieu entity)
		{
			this.SendPropertyChanging();
			entity.Xuat_Chieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="UserId", OtherKey="UserName", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.UserName;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="UserName", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.UserName;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="UserName", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRole = null;
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRole = this;
						this._UserId = value.UserName;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntityRef<AspNetUserRole> _AspNetUserRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRole = default(EntityRef<AspNetUserRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="UserName", OtherKey="UserId")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="UserName", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRole", ThisKey="UserName", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public AspNetUserRole AspNetUserRole
		{
			get
			{
				return this._AspNetUserRole.Entity;
			}
			set
			{
				AspNetUserRole previousValue = this._AspNetUserRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUserRole.Entity = null;
						previousValue.AspNetUser = null;
					}
					this._AspNetUserRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUser = this;
					}
					this.SendPropertyChanged("AspNetUserRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banner")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBanner;
		
		private string _Anh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBannerChanging(int value);
    partial void OnMaBannerChanged();
    partial void OnAnhChanging(string value);
    partial void OnAnhChanged();
    #endregion
		
		public Banner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBanner", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBanner
		{
			get
			{
				return this._MaBanner;
			}
			set
			{
				if ((this._MaBanner != value))
				{
					this.OnMaBannerChanging(value);
					this.SendPropertyChanging();
					this._MaBanner = value;
					this.SendPropertyChanged("MaBanner");
					this.OnMaBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh", DbType="NVarChar(50)")]
		public string Anh
		{
			get
			{
				return this._Anh;
			}
			set
			{
				if ((this._Anh != value))
				{
					this.OnAnhChanging(value);
					this.SendPropertyChanging();
					this._Anh = value;
					this.SendPropertyChanged("Anh");
					this.OnAnhChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ghe")]
	public partial class Ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maghe;
		
		private string _Gheso;
		
		private int _Maphong;
		
		private int _Phongso;
		
		private int _MaLG;
		
		private string _TenLG;
		
		private int _Giaghe;
		
		private EntitySet<VE> _VEs;
		
		private EntityRef<Loai_Ghe> _Loai_Ghe;
		
		private EntityRef<Phong_Chieu> _Phong_Chieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMagheChanging(int value);
    partial void OnMagheChanged();
    partial void OnGhesoChanging(string value);
    partial void OnGhesoChanged();
    partial void OnMaphongChanging(int value);
    partial void OnMaphongChanged();
    partial void OnPhongsoChanging(int value);
    partial void OnPhongsoChanged();
    partial void OnMaLGChanging(int value);
    partial void OnMaLGChanged();
    partial void OnTenLGChanging(string value);
    partial void OnTenLGChanged();
    partial void OnGiagheChanging(int value);
    partial void OnGiagheChanged();
    #endregion
		
		public Ghe()
		{
			this._VEs = new EntitySet<VE>(new Action<VE>(this.attach_VEs), new Action<VE>(this.detach_VEs));
			this._Loai_Ghe = default(EntityRef<Loai_Ghe>);
			this._Phong_Chieu = default(EntityRef<Phong_Chieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maghe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Maghe
		{
			get
			{
				return this._Maghe;
			}
			set
			{
				if ((this._Maghe != value))
				{
					this.OnMagheChanging(value);
					this.SendPropertyChanging();
					this._Maghe = value;
					this.SendPropertyChanged("Maghe");
					this.OnMagheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gheso", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gheso
		{
			get
			{
				return this._Gheso;
			}
			set
			{
				if ((this._Gheso != value))
				{
					this.OnGhesoChanging(value);
					this.SendPropertyChanging();
					this._Gheso = value;
					this.SendPropertyChanged("Gheso");
					this.OnGhesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphong", DbType="Int NOT NULL")]
		public int Maphong
		{
			get
			{
				return this._Maphong;
			}
			set
			{
				if ((this._Maphong != value))
				{
					if (this._Phong_Chieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaphongChanging(value);
					this.SendPropertyChanging();
					this._Maphong = value;
					this.SendPropertyChanged("Maphong");
					this.OnMaphongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phongso", DbType="Int NOT NULL")]
		public int Phongso
		{
			get
			{
				return this._Phongso;
			}
			set
			{
				if ((this._Phongso != value))
				{
					this.OnPhongsoChanging(value);
					this.SendPropertyChanging();
					this._Phongso = value;
					this.SendPropertyChanged("Phongso");
					this.OnPhongsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLG", DbType="Int NOT NULL")]
		public int MaLG
		{
			get
			{
				return this._MaLG;
			}
			set
			{
				if ((this._MaLG != value))
				{
					if (this._Loai_Ghe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLGChanging(value);
					this.SendPropertyChanging();
					this._MaLG = value;
					this.SendPropertyChanged("MaLG");
					this.OnMaLGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLG
		{
			get
			{
				return this._TenLG;
			}
			set
			{
				if ((this._TenLG != value))
				{
					this.OnTenLGChanging(value);
					this.SendPropertyChanging();
					this._TenLG = value;
					this.SendPropertyChanged("TenLG");
					this.OnTenLGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giaghe", DbType="Int NOT NULL")]
		public int Giaghe
		{
			get
			{
				return this._Giaghe;
			}
			set
			{
				if ((this._Giaghe != value))
				{
					this.OnGiagheChanging(value);
					this.SendPropertyChanging();
					this._Giaghe = value;
					this.SendPropertyChanged("Giaghe");
					this.OnGiagheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_VE", Storage="_VEs", ThisKey="Maghe", OtherKey="Maghe")]
		public EntitySet<VE> VEs
		{
			get
			{
				return this._VEs;
			}
			set
			{
				this._VEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_Ghe_Ghe", Storage="_Loai_Ghe", ThisKey="MaLG", OtherKey="MaLG", IsForeignKey=true)]
		public Loai_Ghe Loai_Ghe
		{
			get
			{
				return this._Loai_Ghe.Entity;
			}
			set
			{
				Loai_Ghe previousValue = this._Loai_Ghe.Entity;
				if (((previousValue != value) 
							|| (this._Loai_Ghe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loai_Ghe.Entity = null;
						previousValue.Ghes.Remove(this);
					}
					this._Loai_Ghe.Entity = value;
					if ((value != null))
					{
						value.Ghes.Add(this);
						this._MaLG = value.MaLG;
					}
					else
					{
						this._MaLG = default(int);
					}
					this.SendPropertyChanged("Loai_Ghe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_Chieu_Ghe", Storage="_Phong_Chieu", ThisKey="Maphong", OtherKey="Maphong", IsForeignKey=true)]
		public Phong_Chieu Phong_Chieu
		{
			get
			{
				return this._Phong_Chieu.Entity;
			}
			set
			{
				Phong_Chieu previousValue = this._Phong_Chieu.Entity;
				if (((previousValue != value) 
							|| (this._Phong_Chieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong_Chieu.Entity = null;
						previousValue.Ghes.Remove(this);
					}
					this._Phong_Chieu.Entity = value;
					if ((value != null))
					{
						value.Ghes.Add(this);
						this._Maphong = value.Maphong;
					}
					else
					{
						this._Maphong = default(int);
					}
					this.SendPropertyChanged("Phong_Chieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEs(VE entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = this;
		}
		
		private void detach_VEs(VE entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _MaKH;
		
		private string _TenPhim;
		
		private string _TongTien;
		
		private System.Nullable<System.DateTime> _DateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnTongTienChanging(string value);
    partial void OnTongTienChanged();
    partial void OnDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeChanged();
    #endregion
		
		public HoaDon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(100)")]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="NVarChar(100)")]
		public string TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Khach Hang]")]
	public partial class Khach_Hang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _Hoten;
		
		private string _Ngaysinh;
		
		private string _Diachi;
		
		private string _Email;
		
		private int _SDT;
		
		private int _CMND;
		
		private int _Diemtichluy;
		
		private EntitySet<VE> _VEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    partial void OnNgaysinhChanging(string value);
    partial void OnNgaysinhChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(int value);
    partial void OnSDTChanged();
    partial void OnCMNDChanging(int value);
    partial void OnCMNDChanged();
    partial void OnDiemtichluyChanging(int value);
    partial void OnDiemtichluyChanged();
    #endregion
		
		public Khach_Hang()
		{
			this._VEs = new EntitySet<VE>(new Action<VE>(this.attach_VEs), new Action<VE>(this.detach_VEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int NOT NULL")]
		public int SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Int NOT NULL")]
		public int CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diemtichluy", DbType="Int NOT NULL")]
		public int Diemtichluy
		{
			get
			{
				return this._Diemtichluy;
			}
			set
			{
				if ((this._Diemtichluy != value))
				{
					this.OnDiemtichluyChanging(value);
					this.SendPropertyChanging();
					this._Diemtichluy = value;
					this.SendPropertyChanged("Diemtichluy");
					this.OnDiemtichluyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khach_Hang_VE", Storage="_VEs", ThisKey="MaKH", OtherKey="Maphim")]
		public EntitySet<VE> VEs
		{
			get
			{
				return this._VEs;
			}
			set
			{
				this._VEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEs(VE entity)
		{
			this.SendPropertyChanging();
			entity.Khach_Hang = this;
		}
		
		private void detach_VEs(VE entity)
		{
			this.SendPropertyChanging();
			entity.Khach_Hang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Lich Chieu]")]
	public partial class Lich_Chieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLC;
		
		private int _MaXC;
		
		private string _Ngaychieu;
		
		private string _Giochieu;
		
		private string _Trangthai;
		
		private int _GiaXC;
		
		private EntitySet<VE> _VEs;
		
		private EntityRef<Xuat_Chieu> _Xuat_Chieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLCChanging(int value);
    partial void OnMaLCChanged();
    partial void OnMaXCChanging(int value);
    partial void OnMaXCChanged();
    partial void OnNgaychieuChanging(string value);
    partial void OnNgaychieuChanged();
    partial void OnGiochieuChanging(string value);
    partial void OnGiochieuChanged();
    partial void OnTrangthaiChanging(string value);
    partial void OnTrangthaiChanged();
    partial void OnGiaXCChanging(int value);
    partial void OnGiaXCChanged();
    #endregion
		
		public Lich_Chieu()
		{
			this._VEs = new EntitySet<VE>(new Action<VE>(this.attach_VEs), new Action<VE>(this.detach_VEs));
			this._Xuat_Chieu = default(EntityRef<Xuat_Chieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLC
		{
			get
			{
				return this._MaLC;
			}
			set
			{
				if ((this._MaLC != value))
				{
					this.OnMaLCChanging(value);
					this.SendPropertyChanging();
					this._MaLC = value;
					this.SendPropertyChanged("MaLC");
					this.OnMaLCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaXC", DbType="Int NOT NULL")]
		public int MaXC
		{
			get
			{
				return this._MaXC;
			}
			set
			{
				if ((this._MaXC != value))
				{
					if (this._Xuat_Chieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaXCChanging(value);
					this.SendPropertyChanging();
					this._MaXC = value;
					this.SendPropertyChanged("MaXC");
					this.OnMaXCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaychieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ngaychieu
		{
			get
			{
				return this._Ngaychieu;
			}
			set
			{
				if ((this._Ngaychieu != value))
				{
					this.OnNgaychieuChanging(value);
					this.SendPropertyChanging();
					this._Ngaychieu = value;
					this.SendPropertyChanged("Ngaychieu");
					this.OnNgaychieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giochieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Giochieu
		{
			get
			{
				return this._Giochieu;
			}
			set
			{
				if ((this._Giochieu != value))
				{
					this.OnGiochieuChanging(value);
					this.SendPropertyChanging();
					this._Giochieu = value;
					this.SendPropertyChanged("Giochieu");
					this.OnGiochieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trangthai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Trangthai
		{
			get
			{
				return this._Trangthai;
			}
			set
			{
				if ((this._Trangthai != value))
				{
					this.OnTrangthaiChanging(value);
					this.SendPropertyChanging();
					this._Trangthai = value;
					this.SendPropertyChanged("Trangthai");
					this.OnTrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaXC", DbType="Int NOT NULL")]
		public int GiaXC
		{
			get
			{
				return this._GiaXC;
			}
			set
			{
				if ((this._GiaXC != value))
				{
					this.OnGiaXCChanging(value);
					this.SendPropertyChanging();
					this._GiaXC = value;
					this.SendPropertyChanged("GiaXC");
					this.OnGiaXCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lich_Chieu_VE", Storage="_VEs", ThisKey="MaLC", OtherKey="MaLC")]
		public EntitySet<VE> VEs
		{
			get
			{
				return this._VEs;
			}
			set
			{
				this._VEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xuat_Chieu_Lich_Chieu", Storage="_Xuat_Chieu", ThisKey="MaXC", OtherKey="MaXC", IsForeignKey=true)]
		public Xuat_Chieu Xuat_Chieu
		{
			get
			{
				return this._Xuat_Chieu.Entity;
			}
			set
			{
				Xuat_Chieu previousValue = this._Xuat_Chieu.Entity;
				if (((previousValue != value) 
							|| (this._Xuat_Chieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xuat_Chieu.Entity = null;
						previousValue.Lich_Chieus.Remove(this);
					}
					this._Xuat_Chieu.Entity = value;
					if ((value != null))
					{
						value.Lich_Chieus.Add(this);
						this._MaXC = value.MaXC;
					}
					else
					{
						this._MaXC = default(int);
					}
					this.SendPropertyChanged("Xuat_Chieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEs(VE entity)
		{
			this.SendPropertyChanging();
			entity.Lich_Chieu = this;
		}
		
		private void detach_VEs(VE entity)
		{
			this.SendPropertyChanging();
			entity.Lich_Chieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Loai Ghe]")]
	public partial class Loai_Ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLG;
		
		private string _TenLG;
		
		private int _Giaghe;
		
		private EntitySet<Ghe> _Ghes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLGChanging(int value);
    partial void OnMaLGChanged();
    partial void OnTenLGChanging(string value);
    partial void OnTenLGChanged();
    partial void OnGiagheChanging(int value);
    partial void OnGiagheChanged();
    #endregion
		
		public Loai_Ghe()
		{
			this._Ghes = new EntitySet<Ghe>(new Action<Ghe>(this.attach_Ghes), new Action<Ghe>(this.detach_Ghes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLG
		{
			get
			{
				return this._MaLG;
			}
			set
			{
				if ((this._MaLG != value))
				{
					this.OnMaLGChanging(value);
					this.SendPropertyChanging();
					this._MaLG = value;
					this.SendPropertyChanged("MaLG");
					this.OnMaLGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLG
		{
			get
			{
				return this._TenLG;
			}
			set
			{
				if ((this._TenLG != value))
				{
					this.OnTenLGChanging(value);
					this.SendPropertyChanging();
					this._TenLG = value;
					this.SendPropertyChanged("TenLG");
					this.OnTenLGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giaghe", DbType="Int NOT NULL")]
		public int Giaghe
		{
			get
			{
				return this._Giaghe;
			}
			set
			{
				if ((this._Giaghe != value))
				{
					this.OnGiagheChanging(value);
					this.SendPropertyChanging();
					this._Giaghe = value;
					this.SendPropertyChanged("Giaghe");
					this.OnGiagheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_Ghe_Ghe", Storage="_Ghes", ThisKey="MaLG", OtherKey="MaLG")]
		public EntitySet<Ghe> Ghes
		{
			get
			{
				return this._Ghes;
			}
			set
			{
				this._Ghes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Loai_Ghe = this;
		}
		
		private void detach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Loai_Ghe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Loai Phim]")]
	public partial class Loai_Phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLP;
		
		private string _Loaiphim;
		
		private int _GiaLP;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLPChanging(int value);
    partial void OnMaLPChanged();
    partial void OnLoaiphimChanging(string value);
    partial void OnLoaiphimChanged();
    partial void OnGiaLPChanging(int value);
    partial void OnGiaLPChanged();
    #endregion
		
		public Loai_Phim()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLP
		{
			get
			{
				return this._MaLP;
			}
			set
			{
				if ((this._MaLP != value))
				{
					this.OnMaLPChanging(value);
					this.SendPropertyChanging();
					this._MaLP = value;
					this.SendPropertyChanged("MaLP");
					this.OnMaLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loaiphim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Loaiphim
		{
			get
			{
				return this._Loaiphim;
			}
			set
			{
				if ((this._Loaiphim != value))
				{
					this.OnLoaiphimChanging(value);
					this.SendPropertyChanging();
					this._Loaiphim = value;
					this.SendPropertyChanged("Loaiphim");
					this.OnLoaiphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaLP", DbType="Int NOT NULL")]
		public int GiaLP
		{
			get
			{
				return this._GiaLP;
			}
			set
			{
				if ((this._GiaLP != value))
				{
					this.OnGiaLPChanging(value);
					this.SendPropertyChanging();
					this._GiaLP = value;
					this.SendPropertyChanged("GiaLP");
					this.OnGiaLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_Phim_Phim", Storage="_Phims", ThisKey="MaLP", OtherKey="MaLP")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.Loai_Phim = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.Loai_Phim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phim")]
	public partial class Phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maphim;
		
		private string _Tenphim;
		
		private string _Mota;
		
		private string _Thoiluong;
		
		private string _Ngaykhoichieu;
		
		private string _Daodien;
		
		private int _Namsx;
		
		private int _Matheloai;
		
		private string _Theloai;
		
		private string _Apphich;
		
		private int _MaLP;
		
		private string _Loaiphim;
		
		private int _GiaLP;
		
		private string _Trailer;
		
		private EntitySet<VE> _VEs;
		
		private EntityRef<Loai_Phim> _Loai_Phim;
		
		private EntityRef<The_Loai> _The_Loai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaphimChanging(int value);
    partial void OnMaphimChanged();
    partial void OnTenphimChanging(string value);
    partial void OnTenphimChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnThoiluongChanging(string value);
    partial void OnThoiluongChanged();
    partial void OnNgaykhoichieuChanging(string value);
    partial void OnNgaykhoichieuChanged();
    partial void OnDaodienChanging(string value);
    partial void OnDaodienChanged();
    partial void OnNamsxChanging(int value);
    partial void OnNamsxChanged();
    partial void OnMatheloaiChanging(int value);
    partial void OnMatheloaiChanged();
    partial void OnTheloaiChanging(string value);
    partial void OnTheloaiChanged();
    partial void OnApphichChanging(string value);
    partial void OnApphichChanged();
    partial void OnMaLPChanging(int value);
    partial void OnMaLPChanged();
    partial void OnLoaiphimChanging(string value);
    partial void OnLoaiphimChanged();
    partial void OnGiaLPChanging(int value);
    partial void OnGiaLPChanged();
    partial void OnTrailerChanging(string value);
    partial void OnTrailerChanged();
    #endregion
		
		public Phim()
		{
			this._VEs = new EntitySet<VE>(new Action<VE>(this.attach_VEs), new Action<VE>(this.detach_VEs));
			this._Loai_Phim = default(EntityRef<Loai_Phim>);
			this._The_Loai = default(EntityRef<The_Loai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphim", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Maphim
		{
			get
			{
				return this._Maphim;
			}
			set
			{
				if ((this._Maphim != value))
				{
					this.OnMaphimChanging(value);
					this.SendPropertyChanging();
					this._Maphim = value;
					this.SendPropertyChanged("Maphim");
					this.OnMaphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenphim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tenphim
		{
			get
			{
				return this._Tenphim;
			}
			set
			{
				if ((this._Tenphim != value))
				{
					this.OnTenphimChanging(value);
					this.SendPropertyChanging();
					this._Tenphim = value;
					this.SendPropertyChanged("Tenphim");
					this.OnTenphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thoiluong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Thoiluong
		{
			get
			{
				return this._Thoiluong;
			}
			set
			{
				if ((this._Thoiluong != value))
				{
					this.OnThoiluongChanging(value);
					this.SendPropertyChanging();
					this._Thoiluong = value;
					this.SendPropertyChanged("Thoiluong");
					this.OnThoiluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaykhoichieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ngaykhoichieu
		{
			get
			{
				return this._Ngaykhoichieu;
			}
			set
			{
				if ((this._Ngaykhoichieu != value))
				{
					this.OnNgaykhoichieuChanging(value);
					this.SendPropertyChanging();
					this._Ngaykhoichieu = value;
					this.SendPropertyChanged("Ngaykhoichieu");
					this.OnNgaykhoichieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Daodien", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Daodien
		{
			get
			{
				return this._Daodien;
			}
			set
			{
				if ((this._Daodien != value))
				{
					this.OnDaodienChanging(value);
					this.SendPropertyChanging();
					this._Daodien = value;
					this.SendPropertyChanged("Daodien");
					this.OnDaodienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namsx", DbType="Int NOT NULL")]
		public int Namsx
		{
			get
			{
				return this._Namsx;
			}
			set
			{
				if ((this._Namsx != value))
				{
					this.OnNamsxChanging(value);
					this.SendPropertyChanging();
					this._Namsx = value;
					this.SendPropertyChanged("Namsx");
					this.OnNamsxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matheloai", DbType="Int NOT NULL")]
		public int Matheloai
		{
			get
			{
				return this._Matheloai;
			}
			set
			{
				if ((this._Matheloai != value))
				{
					if (this._The_Loai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatheloaiChanging(value);
					this.SendPropertyChanging();
					this._Matheloai = value;
					this.SendPropertyChanged("Matheloai");
					this.OnMatheloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Theloai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Theloai
		{
			get
			{
				return this._Theloai;
			}
			set
			{
				if ((this._Theloai != value))
				{
					this.OnTheloaiChanging(value);
					this.SendPropertyChanging();
					this._Theloai = value;
					this.SendPropertyChanged("Theloai");
					this.OnTheloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apphich", DbType="NVarChar(50)")]
		public string Apphich
		{
			get
			{
				return this._Apphich;
			}
			set
			{
				if ((this._Apphich != value))
				{
					this.OnApphichChanging(value);
					this.SendPropertyChanging();
					this._Apphich = value;
					this.SendPropertyChanged("Apphich");
					this.OnApphichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLP", DbType="Int NOT NULL")]
		public int MaLP
		{
			get
			{
				return this._MaLP;
			}
			set
			{
				if ((this._MaLP != value))
				{
					if (this._Loai_Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLPChanging(value);
					this.SendPropertyChanging();
					this._MaLP = value;
					this.SendPropertyChanged("MaLP");
					this.OnMaLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loaiphim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Loaiphim
		{
			get
			{
				return this._Loaiphim;
			}
			set
			{
				if ((this._Loaiphim != value))
				{
					this.OnLoaiphimChanging(value);
					this.SendPropertyChanging();
					this._Loaiphim = value;
					this.SendPropertyChanged("Loaiphim");
					this.OnLoaiphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaLP", DbType="Int NOT NULL")]
		public int GiaLP
		{
			get
			{
				return this._GiaLP;
			}
			set
			{
				if ((this._GiaLP != value))
				{
					this.OnGiaLPChanging(value);
					this.SendPropertyChanging();
					this._GiaLP = value;
					this.SendPropertyChanged("GiaLP");
					this.OnGiaLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trailer", DbType="NVarChar(MAX)")]
		public string Trailer
		{
			get
			{
				return this._Trailer;
			}
			set
			{
				if ((this._Trailer != value))
				{
					this.OnTrailerChanging(value);
					this.SendPropertyChanging();
					this._Trailer = value;
					this.SendPropertyChanged("Trailer");
					this.OnTrailerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_VE", Storage="_VEs", ThisKey="Maphim", OtherKey="Maphim")]
		public EntitySet<VE> VEs
		{
			get
			{
				return this._VEs;
			}
			set
			{
				this._VEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_Phim_Phim", Storage="_Loai_Phim", ThisKey="MaLP", OtherKey="MaLP", IsForeignKey=true)]
		public Loai_Phim Loai_Phim
		{
			get
			{
				return this._Loai_Phim.Entity;
			}
			set
			{
				Loai_Phim previousValue = this._Loai_Phim.Entity;
				if (((previousValue != value) 
							|| (this._Loai_Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loai_Phim.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._Loai_Phim.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._MaLP = value.MaLP;
					}
					else
					{
						this._MaLP = default(int);
					}
					this.SendPropertyChanged("Loai_Phim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="The_Loai_Phim", Storage="_The_Loai", ThisKey="Matheloai", OtherKey="Matheloai", IsForeignKey=true)]
		public The_Loai The_Loai
		{
			get
			{
				return this._The_Loai.Entity;
			}
			set
			{
				The_Loai previousValue = this._The_Loai.Entity;
				if (((previousValue != value) 
							|| (this._The_Loai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._The_Loai.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._The_Loai.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._Matheloai = value.Matheloai;
					}
					else
					{
						this._Matheloai = default(int);
					}
					this.SendPropertyChanged("The_Loai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEs(VE entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_VEs(VE entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Phong Chieu]")]
	public partial class Phong_Chieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maphong;
		
		private int _Marap;
		
		private int _Phongso;
		
		private int _Sochongoi;
		
		private string _Tinhtrang;
		
		private string _LoaiMH;
		
		private string _LoaiDD;
		
		private EntitySet<Ghe> _Ghes;
		
		private EntityRef<Rap_phim> _Rap_phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaphongChanging(int value);
    partial void OnMaphongChanged();
    partial void OnMarapChanging(int value);
    partial void OnMarapChanged();
    partial void OnPhongsoChanging(int value);
    partial void OnPhongsoChanged();
    partial void OnSochongoiChanging(int value);
    partial void OnSochongoiChanged();
    partial void OnTinhtrangChanging(string value);
    partial void OnTinhtrangChanged();
    partial void OnLoaiMHChanging(string value);
    partial void OnLoaiMHChanged();
    partial void OnLoaiDDChanging(string value);
    partial void OnLoaiDDChanged();
    #endregion
		
		public Phong_Chieu()
		{
			this._Ghes = new EntitySet<Ghe>(new Action<Ghe>(this.attach_Ghes), new Action<Ghe>(this.detach_Ghes));
			this._Rap_phim = default(EntityRef<Rap_phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Maphong
		{
			get
			{
				return this._Maphong;
			}
			set
			{
				if ((this._Maphong != value))
				{
					this.OnMaphongChanging(value);
					this.SendPropertyChanging();
					this._Maphong = value;
					this.SendPropertyChanged("Maphong");
					this.OnMaphongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marap", DbType="Int NOT NULL")]
		public int Marap
		{
			get
			{
				return this._Marap;
			}
			set
			{
				if ((this._Marap != value))
				{
					if (this._Rap_phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarapChanging(value);
					this.SendPropertyChanging();
					this._Marap = value;
					this.SendPropertyChanged("Marap");
					this.OnMarapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phongso", DbType="Int NOT NULL")]
		public int Phongso
		{
			get
			{
				return this._Phongso;
			}
			set
			{
				if ((this._Phongso != value))
				{
					this.OnPhongsoChanging(value);
					this.SendPropertyChanging();
					this._Phongso = value;
					this.SendPropertyChanged("Phongso");
					this.OnPhongsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sochongoi", DbType="Int NOT NULL")]
		public int Sochongoi
		{
			get
			{
				return this._Sochongoi;
			}
			set
			{
				if ((this._Sochongoi != value))
				{
					this.OnSochongoiChanging(value);
					this.SendPropertyChanging();
					this._Sochongoi = value;
					this.SendPropertyChanged("Sochongoi");
					this.OnSochongoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinhtrang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tinhtrang
		{
			get
			{
				return this._Tinhtrang;
			}
			set
			{
				if ((this._Tinhtrang != value))
				{
					this.OnTinhtrangChanging(value);
					this.SendPropertyChanging();
					this._Tinhtrang = value;
					this.SendPropertyChanged("Tinhtrang");
					this.OnTinhtrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoaiMH
		{
			get
			{
				return this._LoaiMH;
			}
			set
			{
				if ((this._LoaiMH != value))
				{
					this.OnLoaiMHChanging(value);
					this.SendPropertyChanging();
					this._LoaiMH = value;
					this.SendPropertyChanged("LoaiMH");
					this.OnLoaiMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiDD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoaiDD
		{
			get
			{
				return this._LoaiDD;
			}
			set
			{
				if ((this._LoaiDD != value))
				{
					this.OnLoaiDDChanging(value);
					this.SendPropertyChanging();
					this._LoaiDD = value;
					this.SendPropertyChanged("LoaiDD");
					this.OnLoaiDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_Chieu_Ghe", Storage="_Ghes", ThisKey="Maphong", OtherKey="Maphong")]
		public EntitySet<Ghe> Ghes
		{
			get
			{
				return this._Ghes;
			}
			set
			{
				this._Ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rap_phim_Phong_Chieu", Storage="_Rap_phim", ThisKey="Marap", OtherKey="Marap", IsForeignKey=true)]
		public Rap_phim Rap_phim
		{
			get
			{
				return this._Rap_phim.Entity;
			}
			set
			{
				Rap_phim previousValue = this._Rap_phim.Entity;
				if (((previousValue != value) 
							|| (this._Rap_phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rap_phim.Entity = null;
						previousValue.Phong_Chieus.Remove(this);
					}
					this._Rap_phim.Entity = value;
					if ((value != null))
					{
						value.Phong_Chieus.Add(this);
						this._Marap = value.Marap;
					}
					else
					{
						this._Marap = default(int);
					}
					this.SendPropertyChanged("Rap_phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Phong_Chieu = this;
		}
		
		private void detach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Phong_Chieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Rap phim]")]
	public partial class Rap_phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Marap;
		
		private string _Tenrap;
		
		private string _Diachi;
		
		private EntitySet<Phong_Chieu> _Phong_Chieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarapChanging(int value);
    partial void OnMarapChanged();
    partial void OnTenrapChanging(string value);
    partial void OnTenrapChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    #endregion
		
		public Rap_phim()
		{
			this._Phong_Chieus = new EntitySet<Phong_Chieu>(new Action<Phong_Chieu>(this.attach_Phong_Chieus), new Action<Phong_Chieu>(this.detach_Phong_Chieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Marap
		{
			get
			{
				return this._Marap;
			}
			set
			{
				if ((this._Marap != value))
				{
					this.OnMarapChanging(value);
					this.SendPropertyChanging();
					this._Marap = value;
					this.SendPropertyChanged("Marap");
					this.OnMarapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenrap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tenrap
		{
			get
			{
				return this._Tenrap;
			}
			set
			{
				if ((this._Tenrap != value))
				{
					this.OnTenrapChanging(value);
					this.SendPropertyChanging();
					this._Tenrap = value;
					this.SendPropertyChanged("Tenrap");
					this.OnTenrapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rap_phim_Phong_Chieu", Storage="_Phong_Chieus", ThisKey="Marap", OtherKey="Marap")]
		public EntitySet<Phong_Chieu> Phong_Chieus
		{
			get
			{
				return this._Phong_Chieus;
			}
			set
			{
				this._Phong_Chieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phong_Chieus(Phong_Chieu entity)
		{
			this.SendPropertyChanging();
			entity.Rap_phim = this;
		}
		
		private void detach_Phong_Chieus(Phong_Chieu entity)
		{
			this.SendPropertyChanging();
			entity.Rap_phim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[The Loai]")]
	public partial class The_Loai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Matheloai;
		
		private string _Tentheloai;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatheloaiChanging(int value);
    partial void OnMatheloaiChanged();
    partial void OnTentheloaiChanging(string value);
    partial void OnTentheloaiChanged();
    #endregion
		
		public The_Loai()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matheloai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Matheloai
		{
			get
			{
				return this._Matheloai;
			}
			set
			{
				if ((this._Matheloai != value))
				{
					this.OnMatheloaiChanging(value);
					this.SendPropertyChanging();
					this._Matheloai = value;
					this.SendPropertyChanged("Matheloai");
					this.OnMatheloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tentheloai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tentheloai
		{
			get
			{
				return this._Tentheloai;
			}
			set
			{
				if ((this._Tentheloai != value))
				{
					this.OnTentheloaiChanging(value);
					this.SendPropertyChanging();
					this._Tentheloai = value;
					this.SendPropertyChanged("Tentheloai");
					this.OnTentheloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="The_Loai_Phim", Storage="_Phims", ThisKey="Matheloai", OtherKey="Matheloai")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.The_Loai = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.The_Loai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VE")]
	public partial class VE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mave;
		
		private int _MaKH;
		
		private int _Maphim;
		
		private int _MaLC;
		
		private int _Maghe;
		
		private string _Tenphim;
		
		private string _Giochieu;
		
		private string _Ngaychieu;
		
		private int _Phongso;
		
		private int _Gheso;
		
		private string _Thoiluong;
		
		private int _Gia;
		
		private string _Maphong;
		
		private EntityRef<Ghe> _Ghe;
		
		private EntityRef<Khach_Hang> _Khach_Hang;
		
		private EntityRef<Lich_Chieu> _Lich_Chieu;
		
		private EntityRef<Phim> _Phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaveChanging(int value);
    partial void OnMaveChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnMaphimChanging(int value);
    partial void OnMaphimChanged();
    partial void OnMaLCChanging(int value);
    partial void OnMaLCChanged();
    partial void OnMagheChanging(int value);
    partial void OnMagheChanged();
    partial void OnTenphimChanging(string value);
    partial void OnTenphimChanged();
    partial void OnGiochieuChanging(string value);
    partial void OnGiochieuChanged();
    partial void OnNgaychieuChanging(string value);
    partial void OnNgaychieuChanged();
    partial void OnPhongsoChanging(int value);
    partial void OnPhongsoChanged();
    partial void OnGhesoChanging(int value);
    partial void OnGhesoChanged();
    partial void OnThoiluongChanging(string value);
    partial void OnThoiluongChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    partial void OnMaphongChanging(string value);
    partial void OnMaphongChanged();
    #endregion
		
		public VE()
		{
			this._Ghe = default(EntityRef<Ghe>);
			this._Khach_Hang = default(EntityRef<Khach_Hang>);
			this._Lich_Chieu = default(EntityRef<Lich_Chieu>);
			this._Phim = default(EntityRef<Phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mave", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mave
		{
			get
			{
				return this._Mave;
			}
			set
			{
				if ((this._Mave != value))
				{
					this.OnMaveChanging(value);
					this.SendPropertyChanging();
					this._Mave = value;
					this.SendPropertyChanged("Mave");
					this.OnMaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphim", DbType="Int NOT NULL")]
		public int Maphim
		{
			get
			{
				return this._Maphim;
			}
			set
			{
				if ((this._Maphim != value))
				{
					if ((this._Khach_Hang.HasLoadedOrAssignedValue || this._Phim.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaphimChanging(value);
					this.SendPropertyChanging();
					this._Maphim = value;
					this.SendPropertyChanged("Maphim");
					this.OnMaphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLC", DbType="Int NOT NULL")]
		public int MaLC
		{
			get
			{
				return this._MaLC;
			}
			set
			{
				if ((this._MaLC != value))
				{
					if (this._Lich_Chieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLCChanging(value);
					this.SendPropertyChanging();
					this._MaLC = value;
					this.SendPropertyChanged("MaLC");
					this.OnMaLCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maghe", DbType="Int NOT NULL")]
		public int Maghe
		{
			get
			{
				return this._Maghe;
			}
			set
			{
				if ((this._Maghe != value))
				{
					if (this._Ghe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMagheChanging(value);
					this.SendPropertyChanging();
					this._Maghe = value;
					this.SendPropertyChanged("Maghe");
					this.OnMagheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenphim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tenphim
		{
			get
			{
				return this._Tenphim;
			}
			set
			{
				if ((this._Tenphim != value))
				{
					this.OnTenphimChanging(value);
					this.SendPropertyChanging();
					this._Tenphim = value;
					this.SendPropertyChanged("Tenphim");
					this.OnTenphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giochieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Giochieu
		{
			get
			{
				return this._Giochieu;
			}
			set
			{
				if ((this._Giochieu != value))
				{
					this.OnGiochieuChanging(value);
					this.SendPropertyChanging();
					this._Giochieu = value;
					this.SendPropertyChanged("Giochieu");
					this.OnGiochieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaychieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ngaychieu
		{
			get
			{
				return this._Ngaychieu;
			}
			set
			{
				if ((this._Ngaychieu != value))
				{
					this.OnNgaychieuChanging(value);
					this.SendPropertyChanging();
					this._Ngaychieu = value;
					this.SendPropertyChanged("Ngaychieu");
					this.OnNgaychieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phongso", DbType="Int NOT NULL")]
		public int Phongso
		{
			get
			{
				return this._Phongso;
			}
			set
			{
				if ((this._Phongso != value))
				{
					this.OnPhongsoChanging(value);
					this.SendPropertyChanging();
					this._Phongso = value;
					this.SendPropertyChanged("Phongso");
					this.OnPhongsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gheso", DbType="Int NOT NULL")]
		public int Gheso
		{
			get
			{
				return this._Gheso;
			}
			set
			{
				if ((this._Gheso != value))
				{
					this.OnGhesoChanging(value);
					this.SendPropertyChanging();
					this._Gheso = value;
					this.SendPropertyChanged("Gheso");
					this.OnGhesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thoiluong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Thoiluong
		{
			get
			{
				return this._Thoiluong;
			}
			set
			{
				if ((this._Thoiluong != value))
				{
					this.OnThoiluongChanging(value);
					this.SendPropertyChanging();
					this._Thoiluong = value;
					this.SendPropertyChanged("Thoiluong");
					this.OnThoiluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphong", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Maphong
		{
			get
			{
				return this._Maphong;
			}
			set
			{
				if ((this._Maphong != value))
				{
					this.OnMaphongChanging(value);
					this.SendPropertyChanging();
					this._Maphong = value;
					this.SendPropertyChanged("Maphong");
					this.OnMaphongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_VE", Storage="_Ghe", ThisKey="Maghe", OtherKey="Maghe", IsForeignKey=true)]
		public Ghe Ghe
		{
			get
			{
				return this._Ghe.Entity;
			}
			set
			{
				Ghe previousValue = this._Ghe.Entity;
				if (((previousValue != value) 
							|| (this._Ghe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ghe.Entity = null;
						previousValue.VEs.Remove(this);
					}
					this._Ghe.Entity = value;
					if ((value != null))
					{
						value.VEs.Add(this);
						this._Maghe = value.Maghe;
					}
					else
					{
						this._Maghe = default(int);
					}
					this.SendPropertyChanged("Ghe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khach_Hang_VE", Storage="_Khach_Hang", ThisKey="Maphim", OtherKey="MaKH", IsForeignKey=true)]
		public Khach_Hang Khach_Hang
		{
			get
			{
				return this._Khach_Hang.Entity;
			}
			set
			{
				Khach_Hang previousValue = this._Khach_Hang.Entity;
				if (((previousValue != value) 
							|| (this._Khach_Hang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khach_Hang.Entity = null;
						previousValue.VEs.Remove(this);
					}
					this._Khach_Hang.Entity = value;
					if ((value != null))
					{
						value.VEs.Add(this);
						this._Maphim = value.MaKH;
					}
					else
					{
						this._Maphim = default(int);
					}
					this.SendPropertyChanged("Khach_Hang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lich_Chieu_VE", Storage="_Lich_Chieu", ThisKey="MaLC", OtherKey="MaLC", IsForeignKey=true)]
		public Lich_Chieu Lich_Chieu
		{
			get
			{
				return this._Lich_Chieu.Entity;
			}
			set
			{
				Lich_Chieu previousValue = this._Lich_Chieu.Entity;
				if (((previousValue != value) 
							|| (this._Lich_Chieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lich_Chieu.Entity = null;
						previousValue.VEs.Remove(this);
					}
					this._Lich_Chieu.Entity = value;
					if ((value != null))
					{
						value.VEs.Add(this);
						this._MaLC = value.MaLC;
					}
					else
					{
						this._MaLC = default(int);
					}
					this.SendPropertyChanged("Lich_Chieu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_VE", Storage="_Phim", ThisKey="Maphim", OtherKey="Maphim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.VEs.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.VEs.Add(this);
						this._Maphim = value.Maphim;
					}
					else
					{
						this._Maphim = default(int);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class P_VeResult
	{
		
		private int _Mave;
		
		private int _MaKH;
		
		private int _Maphim;
		
		private int _MaLC;
		
		private int _Maghe;
		
		private string _Tenphim;
		
		private string _Giochieu;
		
		private string _Ngaychieu;
		
		private int _Phongso;
		
		private int _Gheso;
		
		private string _Thoiluong;
		
		private int _Gia;
		
		private string _Maphong;
		
		public P_VeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mave", DbType="Int NOT NULL")]
		public int Mave
		{
			get
			{
				return this._Mave;
			}
			set
			{
				if ((this._Mave != value))
				{
					this._Mave = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this._MaKH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphim", DbType="Int NOT NULL")]
		public int Maphim
		{
			get
			{
				return this._Maphim;
			}
			set
			{
				if ((this._Maphim != value))
				{
					this._Maphim = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLC", DbType="Int NOT NULL")]
		public int MaLC
		{
			get
			{
				return this._MaLC;
			}
			set
			{
				if ((this._MaLC != value))
				{
					this._MaLC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maghe", DbType="Int NOT NULL")]
		public int Maghe
		{
			get
			{
				return this._Maghe;
			}
			set
			{
				if ((this._Maghe != value))
				{
					this._Maghe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenphim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tenphim
		{
			get
			{
				return this._Tenphim;
			}
			set
			{
				if ((this._Tenphim != value))
				{
					this._Tenphim = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giochieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Giochieu
		{
			get
			{
				return this._Giochieu;
			}
			set
			{
				if ((this._Giochieu != value))
				{
					this._Giochieu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaychieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ngaychieu
		{
			get
			{
				return this._Ngaychieu;
			}
			set
			{
				if ((this._Ngaychieu != value))
				{
					this._Ngaychieu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phongso", DbType="Int NOT NULL")]
		public int Phongso
		{
			get
			{
				return this._Phongso;
			}
			set
			{
				if ((this._Phongso != value))
				{
					this._Phongso = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gheso", DbType="Int NOT NULL")]
		public int Gheso
		{
			get
			{
				return this._Gheso;
			}
			set
			{
				if ((this._Gheso != value))
				{
					this._Gheso = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thoiluong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Thoiluong
		{
			get
			{
				return this._Thoiluong;
			}
			set
			{
				if ((this._Thoiluong != value))
				{
					this._Thoiluong = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this._Gia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphong", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Maphong
		{
			get
			{
				return this._Maphong;
			}
			set
			{
				if ((this._Maphong != value))
				{
					this._Maphong = value;
				}
			}
		}
	}
	
	public partial class P_LichChieuResult
	{
		
		private int _Mave;
		
		private int _MaKH;
		
		private int _Maphim;
		
		private int _MaLC;
		
		private int _Maghe;
		
		private string _Tenphim;
		
		private string _Giochieu;
		
		private string _Ngaychieu;
		
		private int _Phongso;
		
		private int _Gheso;
		
		private string _Thoiluong;
		
		private int _Gia;
		
		private string _Maphong;
		
		public P_LichChieuResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mave", DbType="Int NOT NULL")]
		public int Mave
		{
			get
			{
				return this._Mave;
			}
			set
			{
				if ((this._Mave != value))
				{
					this._Mave = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this._MaKH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphim", DbType="Int NOT NULL")]
		public int Maphim
		{
			get
			{
				return this._Maphim;
			}
			set
			{
				if ((this._Maphim != value))
				{
					this._Maphim = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLC", DbType="Int NOT NULL")]
		public int MaLC
		{
			get
			{
				return this._MaLC;
			}
			set
			{
				if ((this._MaLC != value))
				{
					this._MaLC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maghe", DbType="Int NOT NULL")]
		public int Maghe
		{
			get
			{
				return this._Maghe;
			}
			set
			{
				if ((this._Maghe != value))
				{
					this._Maghe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenphim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tenphim
		{
			get
			{
				return this._Tenphim;
			}
			set
			{
				if ((this._Tenphim != value))
				{
					this._Tenphim = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giochieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Giochieu
		{
			get
			{
				return this._Giochieu;
			}
			set
			{
				if ((this._Giochieu != value))
				{
					this._Giochieu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaychieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ngaychieu
		{
			get
			{
				return this._Ngaychieu;
			}
			set
			{
				if ((this._Ngaychieu != value))
				{
					this._Ngaychieu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phongso", DbType="Int NOT NULL")]
		public int Phongso
		{
			get
			{
				return this._Phongso;
			}
			set
			{
				if ((this._Phongso != value))
				{
					this._Phongso = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gheso", DbType="Int NOT NULL")]
		public int Gheso
		{
			get
			{
				return this._Gheso;
			}
			set
			{
				if ((this._Gheso != value))
				{
					this._Gheso = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thoiluong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Thoiluong
		{
			get
			{
				return this._Thoiluong;
			}
			set
			{
				if ((this._Thoiluong != value))
				{
					this._Thoiluong = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this._Gia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphong", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Maphong
		{
			get
			{
				return this._Maphong;
			}
			set
			{
				if ((this._Maphong != value))
				{
					this._Maphong = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
